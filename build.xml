	<project name="UrbanCodeApprenda" default="main" basedir="." xmlns:artifact="urn:maven-artifact-ant">
		<dirname property="example" file="${ant.file.example}" />
		<dirname property="workspace" file="${example}" />
		<property name="build.properties" value="build.properties" />
		<property file="${workspace}/builder/ant-common/${build.properties}" />
		<property name="project" value="" />
		<property name="deployPluginArchiveName" value="releases/ApprendaPlugin_v1.1.zip" />
		<property name="src.dir" value="${basedir}/src" />
		<property name="build.dir" value="${basedir}/build" />
		<property name="plugin.dir" value="${basedir}/plugin" />
		<property name="license.dir" value="${basedir}/license" />
		<property name="doc.dir" value="${basedir}/doc" />
		<property name="bin.dir" value="${basedir}/bin" />
		<property name="lib.dir" value="${basedir}/lib" />
		<property name="scripts.dir" value="${basedir}/scripts" />
		<property name="imports.dir" value="${basedir}/imports" />
		<property name="report.dir" value="${basedir}/testresults" />
		<property name="maven.ant.tasks.url" value="http://mirror.sdunix.com/apache/maven/ant-tasks/2.1.3/binaries/maven-ant-tasks-2.1.3.jar" />
		<property name="maven.ant.tasks.jar" value="${basedir}/testlib/maven-ant-tasks-2.1.3.jar" />
		<property name="clover.jar" value="C:\Users\cdutra\Documents\clover-ant-4.0.6\clover-ant-4.0.6\lib\clover.jar"/>
		<available property="maven.ant.tasks.jar.exists" file="${maven.ant.tasks.jar}" />
		<path id="classpath.spock">
			
		</path>
		<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc">
			<classpath>
				<path refid="classpath.spock" />
			</classpath>
		</taskdef>
		<target name="main" depends="clean, copyDependencies, compileBinary, buildZip" />
		<target name="compileBinary" depends="clean, resolve.dependencies">
			<mkdir dir="${bin.dir}" />
			<groovyc srcdir="${build.dir}/src" destdir="${build.dir}/classes" />
			<jar destfile="${build.dir}/java/support.jar" basedir="${bin.dir}" />
		</target>
		<target name="copyDependencies">
			<!-- Copy build information from plugin directory -->
			<copy todir="${build.dir}">
				<fileset dir="${plugin.dir}"></fileset>
			</copy>
			<!-- Take latest cut from scripts and put in bin directory for compilation. -->
			<mkdir dir="${build.dir}/bin"/>
			<mkdir dir="${build.dir}/src"/>
			<copy todir="${build.dir}/src">
				<fileset dir="${src.dir}/com/apprenda/integrations/urbancode"></fileset>
				<fileset dir="${src.dir}/com/apprenda/integrations/urbancode/test"></fileset>
				<fileset dir="${src.dir}/com/urbancode/air"></fileset>
			</copy>
			<!-- Copy license information -->
			<mkdir dir="${build.dir}/license"/>
			<copy todir="${build.dir}/license">
				<fileset dir="${license.dir}">
					<include name="EPL.txt" />
				</fileset>
			</copy>
			<!-- Copy all libraries -->
			<mkdir dir="${build.dir}/lib"/>
			<copy todir="${build.dir}/lib">
				<fileset dir="${lib.dir}"></fileset>
			</copy>
			<!-- Copy documentation -->
			<mkdir dir="${build.dir}/doc"/>
			<copy todir="${build.dir}/doc">
				<fileset dir="${doc.dir}"></fileset>
			</copy>
			<!-- Make java directory for compilation of support JAR (IBM code) -->
			<mkdir dir="${build.dir}/java"/>		
		</target>	
		<target name="test" depends="init, copy.resources, compileForTest">
			<junit fork="true" forkmode="once" printsummary="yes" haltonfailure="no">
				<classpath path="${build.dir}" />
				<classpath refid="classpath.spock" />
			    <formatter type="xml" />
				<test name="com.apprenda.integrations.urbancode.test.ApprendaClientTests" haltonfailure="yes"
					todir="${report.dir}" outfile="ApprendaClientTests.result">
					<formatter type="xml"/>
				</test>				
			</junit>
		</target>
		<target name="bootstrap.maven.tasks" unless="maven.ant.tasks.jar.exists">
		    <mkdir dir="${lib.dir}" />
		    <get src="${maven.ant.tasks.url}" dest="${maven.ant.tasks.jar}" />
		</target>
		<target name="init.maven.tasks" depends="bootstrap.maven.tasks">
		    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpath="${maven.ant.tasks.jar}" /> 
		</target>
		<target name="resolve.dependencies" depends="init.maven.tasks">
		    <artifact:dependencies pathId="classpath.spock">
			    <dependency groupId="org.spockframework" artifactId="spock-core" version="1.0-groovy-2.4" />
		    	<dependency groupId="com.google.code.gson" artifactId="gson" version="2.2.4" 	/>
			    <dependency groupId="org.codehaus.groovy.modules.http-builder" artifactId="http-builder" version="0.7.1" />
		    	<dependency groupId="org.apache.httpcomponents" artifactId="httpclient" version="4.5.1" />
		    	<dependency groupId="org.apache.httpcomponents" artifactId="httpcore" version="4.4.4" />
		    	<dependency groupId="asm" artifactId="asm" version="3.3.1" />
		    	<dependency groupId="net.sf.ezmorph" artifactId="ezmorph" version="1.0.6"/>
		    	<dependency groupId="net.sf.json-lib" artifactId="json-lib" version="2.4" classifier="jdk15" />
		    	<dependency groupId="commons-collections" artifactId="commons-collections" version="3.2.2" />
		    	<dependency groupId="commons-beanutils" artifactId="commons-beanutils" version="1.8.3" />
		    	<dependency groupId="commons-lang" artifactId="commons-lang" version="2.6" />
		    	<dependency groupId="commons-logging" artifactId="commons-logging" version="1.2" />
		    	<dependency groupId="xerces" artifactId="xercesImpl" version="2.11.0" />
		    	<dependency groupId="xml-resolver" artifactId="xml-resolver" version="1.2" />
		        <remoterepository id="maven-central" url="https://repo1.maven.org/maven2/" />
	    	</artifact:dependencies>
		</target>
		<target name="init" depends="resolve.dependencies">
		    <tstamp />
		    <mkdir dir="${build.dir}" /> 
		</target>
		<target name="copy.resources">
			<copy todir="${build.dir}">
				<fileset dir="${plugin.dir}">
				</fileset>
			</copy>		
			<mkdir dir="${build.dir}/bin"/>
			<copy todir="${build.dir}">
				<fileset dir="${scripts.dir}">					
				</fileset>
			</copy>		
			<mkdir dir="${build.dir}/license"/>
			<copy todir="${build.dir}/license">
				<fileset dir="${license.dir}">
					<include name="EPL.txt" />
				</fileset>
			</copy>
			<mkdir dir="${build.dir}/lib"/>
			<copy todir="${build.dir}/lib">
				<fileset dir="${lib.dir}">
				</fileset>
			</copy>
			<mkdir dir="${build.dir}/doc"/>
			<copy todir="${build.dir}/doc">
				<fileset dir="${doc.dir}">
					<include name="HowTo.html" />
				</fileset>
			</copy>
			<mkdir dir="${build.dir}/java"/>
		  </target>
		<target name="compileForTest">
			<mkdir dir="${bin.dir}" />
			<javac debug="true" destdir="${bin.dir}" target="1.6" source="1.6">
				<classpath refid="classpath.spock" />
				<src path="${src.dir}" />
			</javac>
			<jar destfile="${build.dir}/java/support.jar" basedir="${bin.dir}" />
		</target>
		<!-- Cleans the build -->
		<target name="clean">
			<delete dir="build" />
			<mkdir dir="build" />
			<delete file="${deployPluginArchiveName}" />
		</target>
		<!-- Distribution Tasks -->
		<target name="buildZip">
			<zip destfile="${deployPluginArchiveName}" basedir="${build.dir}" update="false"/>
		</target>
	</project>