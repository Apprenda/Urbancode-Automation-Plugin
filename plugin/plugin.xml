<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<plugin xmlns="http://www.urbancode.com/PluginXMLSchema_v1" xmlns:server="http://www.urbancode.com/PluginServerXMLSchema_v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <header>
    <identifier id="apprendadeploy" name="AppendaDeploy" version="1"/>
    <description>
      Deploys applications to Apprenda
	  </description>
    <tag>PaaS</tag>
  </header>
  <step-type name="Deploy">
    <description>Deploys an existing application to Apprenda. Uses smart application version control to determine best placement.</description>
    <properties>
      		<property name="ApprendaURL">
                <property-ui description="The root url of the Apprenda instance." label="Apprenda REST URL" type="textBox"/>
            </property>
            <property name="ApprendaUser">
                <property-ui description="The developer account username associated with the platform." label="Apprenda User Name" type="textBox"/>
            </property>
            <property name="ApprendaPassword">
                <property-ui description="The respective password." label="Apprenda Password" type="secureBox"/>
            </property>
            <property name="TenantAlias">
                <property-ui description="Your Development Team Alias" label="Development Team" type="textBox"/>
            </property>
            <property name="AppAlias">
                <property-ui description="The Application Alias" label="Application" type="textBox"/>
            </property>
            <property name="ArchiveLocation">
                <property-ui description="Location of the archive." label="Application Archive Location" type="textBox"/>
            </property>
            <property name="AutoIncrementVersion">
                <property-ui description="Check this box if you want to create new versions, regardless of the previous version's state. See our documentation for more details." label="AutoIncrement Version" type="checkBox"/>
            </property>
            <property name="Stage">
            	<property-ui description="The target stage for the uploaded archive" label="Stage" type="selectBox"/>
            	<value label="Definition">definition</value>

            	<value label="Sandbox">sandbox</value>

            	<value label="Published">published</value>

            </property>
    </properties>
    <!-- This is the standard post processing script. It sets the step to Success if the exit code
    of the process was 0. Otherwise, the step fails. In order for a step to run correctly, it must
    have a post processing script and that post processing script must set the status property
    based off of the exit code. -->
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <!--The syntax of the command element is such that each argument goes on its own line.  
    The arg attribute can be "value", "path", or "file". So this command will be:
    ${GROOVY_HOME}/bin/groovy -cp src cmd.groovy ${PLUGIN_INPUT_PROPS} ${PLUGIN_OUTPUT_PROPS} -->
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="java/example.jar:lib/gson-2.2.4.jar"/>
      <arg file="cmd.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  
  <step-type name="NewApplication">
  	<description>Creates a new application in Apprenda</description>
  	<properties>
  		<property name="ApprendaURL">
                <property-ui description="The root url of the Apprenda instance." label="Apprenda REST URL" type="textBox"/>
            </property>
            <property name="ApprendaUser">
                <property-ui description="The developer account username associated with the platform." label="Apprenda User Name" type="textBox"/>
            </property>
            <property name="ApprendaPassword">
                <property-ui description="The respective password." label="Apprenda Password" type="secureBox"/>
            </property>
            <property name="TenantAlias">
                <property-ui description="Your Development Team Alias" label="Development Team" type="textBox"/>
            </property>
            <property name="AppAlias">
                <property-ui description="The Application Alias" label="Application" type="textBox"/>
            </property>
            <property name="ArchiveLocation">
                <property-ui description="Location of the archive." label="Application Archive Location" type="textBox"/>
       </property>
    </properties>
  	<post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
  	<command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="java/example.jar:lib/gson-2.2.4.jar"/>
      <arg file="NewApp.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Scale">
  	<description>Usually used as a post-deployment step, this scales the Apprenda app instances up/down</description>
  	<properties />
  	<post-processing />
  	<command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="java/example.jar:lib/gson-2.2.4.jar"/>
      <arg file="ScaleApp.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
  	</command>
  </step-type>
  <step-type name="Apply Addon Configuration">
  	<description>Adds a Apprenda Addon Token Configuration to the App</description>
  	<properties />
  	<post-processing />
  	<command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="java/example.jar:lib/gson-2.2.4.jar"/>
      <arg file="AddonConfig.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
  	</command>
  </step-type>
</plugin>
