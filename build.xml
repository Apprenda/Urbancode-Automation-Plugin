	<project name="UrbanCodeApprenda" default="main" basedir="." xmlns:artifact="urn:maven-artifact-ant">
		<dirname property="example" file="${ant.file.example}" />
		<dirname property="workspace" file="${example}" />
		<!-- assumes the build.properties is set via the command line ANT invocation -->
		<property name="build.properties" value="build.properties" />
		<property file="${workspace}/builder/ant-common/${build.properties}" />
		<property name="project" value="" />
		<property name="deployPluginArchiveName" value="releases/ApprendaPlugin_v1.1.zip" />
		<property name="src.dir" value="${basedir}/src" />
		<property name="build.dir" value="${basedir}/build" />
		<property name="plugin.dir" value="${basedir}/plugin" />
		<property name="license.dir" value="${basedir}/license" />
		<property name="doc.dir" value="${basedir}/doc" />
		<property name="bin.dir" value="${basedir}/bin" />
		<property name="lib.dir" value="${basedir}/lib" />
		<property name="scripts.dir" value="${basedir}/scripts" />
		<property name="imports.dir" value="${basedir}/imports" />
		<property name="maven.ant.tasks.url" value="http://mirror.sdunix.com/apache/maven/ant-tasks/2.1.3/binaries/maven-ant-tasks-2.1.3.jar" />
		<property name="maven.ant.tasks.jar" value="${lib.dir}${file.separator}maven-ant-tasks-2.1.3.jar" />
		<available property="maven.ant.tasks.jar.exists" file="${maven.ant.tasks.jar}" />
		
		<!-- Main Task for building packages -->
		<target name="main" depends="clean, copyDependencies, compileBinary, buildZip" />
		
		<target name="compileBinary">
			<mkdir dir="${bin.dir}" />
			<javac debug="true" destdir="${bin.dir}" target="1.6" source="1.6">
				<src path="${src.dir}" />
			</javac>
			<jar destfile="${build.dir}/java/example.jar" basedir="${bin.dir}" />
		</target>
		
		<target name="copyDependencies">

			<!-- inputs (info, upgrade) -->
			<copy todir="${build.dir}">
				<fileset dir="${plugin.dir}">
				</fileset>
			</copy>
						
			<mkdir dir="${build.dir}/bin"/>
			
			<copy todir="${build.dir}">
				<fileset dir="${scripts.dir}">					
				</fileset>
			</copy>
					
			<mkdir dir="${build.dir}/license"/>
			<!-- copy license -->
			<copy todir="${build.dir}/license">
				<fileset dir="${license.dir}">
					<include name="EPL.txt" />
				</fileset>
			</copy>

			<mkdir dir="${build.dir}/lib"/>
			<!-- copy license -->
			<copy todir="${build.dir}/lib">
				<fileset dir="${lib.dir}">
				</fileset>
			</copy>
			
			<mkdir dir="${build.dir}/imports"/>
			<!-- copy license -->
			<copy todir="${build.dir}/imports">
				<fileset dir="${imports.dir}">
				</fileset>
			</copy>
			
			<mkdir dir="${build.dir}/doc"/>
			<!-- copy license -->
			<copy todir="${build.dir}/doc">
				<fileset dir="${doc.dir}">
					<include name="HowTo.html" />
				</fileset>
			</copy>
			
			<mkdir dir="${build.dir}/java"/>
							
		</target>	
		
		<!-- Build the actual zip file that gets uploaded to uDeploy -->
		<target name="buildZip">
			<zip destfile="${deployPluginArchiveName}" basedir="${build.dir}" update="false"/>
		</target>
		
		<!-- Test Task for Spock Frameork -->
		<target name="init" depends="init.groovy.tasks">
		    <tstamp />
		    <mkdir dir="${build.dir}" /> 
		  </target> 
		
		<target name="test" depends="compile">
			<junit fork="true" forkmode="once">
			      <classpath path="${build.dir}" />
			      <classpath refid="classpath.spock" />       
			      <batchtest>
			        <fileset dir="${build.dir}">
			          <custom
			            classname="org.spockframework.buildsupport.ant.SpecClassFileSelector"
			            classpathref="classpath.spock" />
			        </fileset>
			      </batchtest>
			      <formatter type="brief" usefile="false" />
			</junit>
		</target>

		<target name="bootstrap.maven.tasks" unless="maven.ant.tasks.jar.exists">
		    <mkdir dir="${lib.dir}" />
		    <get
		      src="${maven.ant.tasks.url}"
		      dest="${maven.ant.tasks.jar}" />
		</target>

		<target name="init.maven.tasks" depends="bootstrap.maven.tasks">
		    <typedef 
		      resource="org/apache/maven/artifact/ant/antlib.xml" 
		      uri="urn:maven-artifact-ant" 
		      classpath="${maven.ant.tasks.jar}" /> 
		</target>
		
		<target name="resolve.dependencies" depends="init.maven.tasks">   
		    <artifact:dependencies pathId="classpath.spock">
			<!-- Mandatory dependencies for using Spock -->
		      <dependency
		        groupId="org.spockframework"
		        artifactId="spock-core"
		        version="1.0-groovy-2.4" />
			<!-- Optional dependencies for using Spock -->
		      <!-- enables mocking of classes (in addition to interfaces) -->
		      <dependency 
		        groupId="cglib"
		        artifactId="cglib-nodep"
		        version="3.1" />
		      <!-- enables mocking of classes without parameterless constructor (together with CGLIB) -->
		      <dependency
		        groupId="org.objenesis"
		        artifactId="objenesis"
		        version="2.1" />
		      <!-- only required if Spock's Ant selector is used, which finds spec classes regardless of their name -->
		      <dependency
		        groupId="org.ow2.asm"
		        artifactId="asm"
		        version="5.0.3" />
		      <!-- only required if Hamcrest matchers are used -->
		      <dependency
		          groupId="org.hamcrest"
		          artifactId="hamcrest-core"
		          version="1.3" />
		    	<!-- required for UrbanCode groovy files -->
	    	<dependency
	    		groupId="com.google.code.gson"
	    		artifactId="gson"
	    		version="2.2.4"
	    	/>
		    <dependency
		    	groupId="org.codehaus.groovy.modules.http-builder"
		    	artifactId="http-builder"
		    	version="0.7.1"
		    />

		      <remoteRepository
		        id="maven-central"
		        url="https://repo1.maven.org/maven2/" />
		<!-- Only required if a snapshot version of Spock is used -->
		      <remoteRepository
		        id="spock-snapshots"
		        url="https://oss.sonatype.org/content/repositories/snapshots/" />
		    </artifact:dependencies>
			
		</target>
		
		<target name="copy.resources" depends="init">
			<!-- inputs (info, upgrade) -->
			<copy todir="${build.dir}">
				<fileset dir="${plugin.dir}">
				</fileset>
			</copy>
						
			<mkdir dir="${build.dir}/bin"/>
			
			<copy todir="${build.dir}">
				<fileset dir="${scripts.dir}">					
				</fileset>
			</copy>
					
			<mkdir dir="${build.dir}/license"/>
			<!-- copy license -->
			<copy todir="${build.dir}/license">
				<fileset dir="${license.dir}">
					<include name="EPL.txt" />
				</fileset>
			</copy>

			<mkdir dir="${build.dir}/lib"/>
			<!-- copy license -->
			<copy todir="${build.dir}/lib">
				<fileset dir="${lib.dir}">
				</fileset>
			</copy>
			
			<mkdir dir="${build.dir}/imports"/>
			<!-- copy license -->
			<copy todir="${build.dir}/imports">
				<fileset dir="${imports.dir}">
				</fileset>
			</copy>
			
			<mkdir dir="${build.dir}/doc"/>
			<!-- copy license -->
			<copy todir="${build.dir}/doc">
				<fileset dir="${doc.dir}">
					<include name="HowTo.html" />
				</fileset>
			</copy>
			
			<mkdir dir="${build.dir}/java"/>
		  </target>
		
		<target name="compile" depends="copy.resources">
			<mkdir dir="${bin.dir}" />
			<javac debug="true" destdir="${bin.dir}" target="1.6" source="1.6">
				<src path="${src.dir}" />
			</javac>
			<jar destfile="${build.dir}/java/example.jar" basedir="${bin.dir}" />
		    <groovyc
		      srcdir="${src.dir}"
		      destdir="${build.dir}"
		      classpathref="classpath.spock" />
		  </target>
		
		<target name="init.groovy.tasks" depends="resolve.dependencies">
				    <!-- Using the Groovy compiler from classpath.spock is a simple and safe setup -->
				    <taskdef name="groovyc"
				      classname="org.codehaus.groovy.ant.Groovyc"
				      classpathref="classpath.spock" />  
		</target>
		

		<!-- Clean Task is used by both Main and Test -->
		<target name="clean">
			<delete dir="build" />
			<mkdir dir="build" />
			<delete file="${deployPluginArchiveName}" />
		</target>

	</project>